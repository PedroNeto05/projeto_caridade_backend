// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Subscription Subscription[]
  Donation     Donation[]
  Event        Event[]

  @@index([email])
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  date        DateTime
  location    String
  description String?
  createdById Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)

  Donation     Donation[]
  Subscription Subscription[]

  @@index([createdById])
}

model Donation {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  DonationItem DonationItem[]

  @@index([userId])
  @@index([eventId])
}

model Subscription {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
  @@index([userId])
  @@index([eventId])
}

model DonationItem {
  id          Int      @id @default(autoincrement())
  donationId  Int
  description String
  quantity    Float
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  Donation    Donation @relation(fields: [donationId], references: [id], onDelete: Cascade)

  @@index([donationId])
}
